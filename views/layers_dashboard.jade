doctype html
html(lang='es')
    head
        title SIGCAPDAM - Gestión de capas
        include ./includes/head.jade
        style(type="text/css").
            .dataTables_wrapper .dataTables_length select{
                width: 5rem;
            }
            .dataTables_length{
                margin-left: 2rem;
            }
            .dataTables_filter{
                margin-right: 1rem;
                margin-bottom: 1rem;
                margin-left: 1rem;
            }
            #layersTable_wrapper{
                margin-top: .7rem;
                margin-bottom: .5rem;
            }

    body(class='bg-white dark:bg-gray-900')
        include ./includes/sidebar.jade
        block content
        main.ml-auto(class='w-[calc(100%-3.73rem)]')
            div(class='2xl:w-auto mx-auto space-y-6')
                div(class="h-16 items-center border-b border-gray-700 flex justify-between px-6 lg:px-12")
                    //- Coordenadas del mouse
                    div(class='flex items-center lg:text-xl md:text-md sm:text-sm')
                        span(class='text-gray-500 dark:text-gray-200') Gestión de capas
                    //- span(class='text-left text-white') SIGCAPDAM
                    button(type="button" id="createLayerModalButton" data-modal-target="createLayerModal" data-modal-toggle="createLayerModal" class="flex items-center justify-center text-white bg-sky-500 hover:bg-sky-800 focus:ring-4 focus:ring-sky-300 font-medium rounded-full text-sm px-4 py-2 dark:bg-sky-500 dark:hover:bg-sky-800 focus:outline-none dark:focus:ring-sky-800")
                                svg(class="h-3.5 w-3.5 mr-2" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg" aria-hidden="true")
                                    path(clip-rule="evenodd" fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z")
                                | Subir capa
                div(class='px-6 h-[calc(55rem)]')
                    //- CRUD para gestionar las capas cargadas
                    section(class="px-3 h-auto w-full rounded-2xl bg-gray-50 dark:bg-gray-900 antialiased")
                        div(class="w-full h-full")
                            div(class="bg-white dark:bg-gray-800 shadow-md sm:rounded-lg overflow-hidden w-full h-full")
                                div(class="h-full overflow-x-auto w-full")
                                    table#layersTable.display(class="table text-sm text-left text-gray-500 dark:text-gray-400 w-full flex-nowrap overflow-auto" style="width: 100% !important;")
                                        thead(class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400")
                                            tr
                                                th(scope="col" class="px-6 py-4") #
                                                th(scope="col" class="px-6 py-4") Nombre
                                                th(scope="col" class="px-6 py-4") Categoría
                                                th(scope="col" class="px-6 py-4") Acciones
                                                    span(class="sr-only") Actions
                                        tbody(id="layersTbody")
                                            each layer in layers
                                                - if(layer.isActive === false)
                                                    - layer.isActive = "Inactiva"
                                                - else
                                                    - layer.isActive = "Activa"
                                                tr(class="border-b dark:border-gray-700")
                                                    th(id="layerId" scope="row" class="px-3 py-3 font-medium text-gray-900 whitespace-nowrap dark:text-white" value=layer.id)=layer.id
                                                    td(id="layerName" scope="row" class="px-4 py-3 text-sm font-medium" value=layer.name)=layer.name
                                                    td(id="layerCategory" scope="row" class="px-4 py-3 text-sm font-medium" value=layer.category)=layer.categoryData.name

                                                    td(id="layerActions" scope="row" class="px-4 py-3 items-center")
                                                        div(class="space-x-2")
                                                                button(class=" hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white text-gray-700 dark:text-gray-200" type="button" data-modal-target="updateLayerModal" data-modal-toggle="updateLayerModal" id="updateModalButton" value=layer.id)
                                                                    svg(svg class="w-4 h-4 mr-2" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 20 20" fill="currentColor" aria-hidden="true")
                                                                        path(d="M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z")
                                                                        path(fill-rule="evenodd" clip-rule="evenodd" d="M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z")
                                                                button(class="hover:bg-gray-100 dark:hover:bg-gray-600 text-red-500 dark:hover:text-red-400" type="button" data-modal-target="deleteModal" data-modal-toggle="deleteModal" id="deleteModalButton" value=layer.id)
                                                                    svg(class="w-4 h-4 mr-2" viewbox="0 0 14 15" fill="none" xmlns="http://www.w3.org/2000/svg" aria-hidden="true")
                                                                        path(fill-rule="evenodd" clip-rule="evenodd" fill="currentColor" d="M6.09922 0.300781C5.93212 0.30087 5.76835 0.347476 5.62625 0.435378C5.48414 0.523281 5.36931 0.649009 5.29462 0.798481L4.64302 2.10078H1.59922C1.36052 2.10078 1.13161 2.1956 0.962823 2.36439C0.79404 2.53317 0.699219 2.76209 0.699219 3.00078C0.699219 3.23948 0.79404 3.46839 0.962823 3.63718C1.13161 3.80596 1.36052 3.90078 1.59922 3.90078V12.9008C1.59922 13.3782 1.78886 13.836 2.12643 14.1736C2.46399 14.5111 2.92183 14.7008 3.39922 14.7008H10.5992C11.0766 14.7008 11.5344 14.5111 11.872 14.1736C12.2096 13.836 12.3992 13.3782 12.3992 12.9008V3.90078C12.6379 3.90078 12.8668 3.80596 13.0356 3.63718C13.2044 3.46839 13.2992 3.23948 13.2992 3.00078C13.2992 2.76209 13.2044 2.53317 13.0356 2.36439C12.8668 2.1956 12.6379 2.10078 12.3992 2.10078H9.35542L8.70382 0.798481C8.62913 0.649009 8.5143 0.523281 8.37219 0.435378C8.23009 0.347476 8.06631 0.30087 7.89922 0.300781H6.09922ZM4.29922 5.70078C4.29922 5.46209 4.39404 5.23317 4.56282 5.06439C4.73161 4.8956 4.96052 4.80078 5.19922 4.80078C5.43791 4.80078 5.66683 4.8956 5.83561 5.06439C6.0044 5.23317 6.09922 5.46209 6.09922 5.70078V11.1008C6.09922 11.3395 6.0044 11.5684 5.83561 11.7372C5.66683 11.906 5.43791 12.0008 5.19922 12.0008C4.96052 12.0008 4.73161 11.906 4.56282 11.7372C4.39404 11.5684 4.29922 11.3395 4.29922 11.1008V5.70078ZM8.79922 4.80078C8.56052 4.80078 8.33161 4.8956 8.16282 5.06439C7.99404 5.23317 7.89922 5.46209 7.89922 5.70078V11.1008C7.89922 11.3395 7.99404 11.5684 8.16282 11.7372C8.33161 11.906 8.56052 12.0008 8.79922 12.0008C9.03791 12.0008 9.26683 11.906 9.43561 11.7372C9.6044 11.5684 9.69922 11.3395 9.69922 11.1008V5.70078C9.69922 5.46209 9.6044 5.23317 9.43561 5.06439C9.26683 4.8956 9.03791 4.80078 8.79922 4.80078Z")
                                        div(id="createLayerModal" tabindex="-1" aria-hidden="true" class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full")
                                            div(class="relative p-4 w-full max-w-2xl max-h-full")
                                                div(class="relative p-4 bg-white rounded-lg shadow dark:bg-gray-800 sm:p-5")
                                                    div(class="flex justify-between items-center pb-4 mb-4 rounded-t border-b sm:mb-5 dark:border-gray-600")
                                                        h3(class="text-lg font-semibold text-gray-900 dark:text-white") Nueva capa
                                                        button(type="button" class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center dark:hover:bg-gray-600 dark:hover:text-white" data-modal-target="createLayerModal" data-modal-toggle="createLayerModal")
                                                            svg(aria-hidden="true" class="w-5 h-5" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg")
                                                                path(fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd")
                                                            span(class="sr-only") Close
                                                    form(name='createLayerModalForm' id='create-form' class='md:space-y-6' action='/api/v1/layers/' method='POST' enctype='multipart/form-data')
                                                        div(class="grid gap-4 mb-4 sm:grid-cols-2")
                                                            div
                                                                label(for="name" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white") Nombre
                                                                input(type="text" name="name" id="name" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-sky-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-sky-500 dark:focus:border-primary-500" placeholder="Nombre de la capa" required="")
                                                            div
                                                                label(for="categoriesCreate" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white") Categoría
                                                                select(id="categoriesCreate" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-sky-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-sky-500 dark:focus:border-primary-500")
                                                                    for category in categories
                                                                        option(value=category.id id="categoriesCreate")= category.name
                                                            div(class="sm:col-span-2")
                                                                label(for="archive" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white") Archivo JSON
                                                                input(type="file" id="archive" accept=".json, .geojson" rows="4" class="block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-sky-500 focus:border-prim2ary-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-sky-500 dark:focus:border-primary-500" placeholder="Capa JSON")
                                                            div(class="sm:col-span-2")
                                                                label(for="icono" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white") Icono
                                                                input(type="file" id="icono" accept=".png, .jpg" name="icono" rows="4" class="block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-sky-500 focus:border-primary-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-sky-500 dark:focus:border-primary-500" placeholder="Icono en PNG o JPG")
                                                            div(class="sm:col-span-2 items-center text-center")
                                                                button(type="submit" class="text-white inline-flex items-center bg-sky-500 hover:bg-sky-800 focus:ring-4 focus:outline-none focus:ring-sky-300 font-medium rounded-lg text-sm px-10 py-2.5 text-center dark:bg-sky-600 dark:hover:bg-sky-500 dark:focus:ring-sky-800")
                                                                    svg(class="mr-1 -ml-1 w-6 h-6" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg")
                                                                        path(fill-rule="evenodd", d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z", clip-rule="evenodd")
                                                                    | Agregar nueva capa
                                        div(id="updateLayerModal" tabindex="-1" aria-hidden="true" class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full")
                                            div(class="relative p-4 w-full max-w-2xl max-h-full")
                                                div(class="relative p-4 bg-white rounded-lg shadow dark:bg-gray-800 sm:p-5")
                                                    div(class="flex justify-between items-center pb-4 mb-4 rounded-t border-b sm:mb-5 dark:dark-border-gray-600")
                                                        h3(class="text-lg font-semibold text-gray-900 dark:text-white") Actualizar capa
                                                        button(type="button" class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center dark:hover:bg-gray-600 dark:hover:text-white" data-modal-toggle="updateLayerModal")
                                                            svg(aria-hidden="true" class="w-5 h-5" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg")
                                                                path(fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd")
                                                            span(class="sr-only") Close
                                                    form(name="updateLayerModalForm" id="update-form" action="/api/v1/layers/" method="PUT" enctype="multipart/form-data")
                                                        div(class="grid gap-4 mb-4 sm:grid-cols-2" id="layerUpdateId")
                                                            div
                                                                label(for="name" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white") Nombre
                                                                input(type="text" name="updateNameInput" id="updateNameInput" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-sky-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-sky-500 dark:focus:border-primary-500" placeholder="Nombre de la capa" required="")
                                                            div
                                                                label(for="categoriesUpdate", class="block mb-2 text-sm font-medium text-gray-900 dark:text-white") Categoría
                                                                select(id="categoriesUpdate", class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-sky-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-sky-500 dark:focus:border-primary-500")
                                                                    each category in categories
                                                                        option(value=category.id id="categoriesUpdate")= category.name
                                                            div(class="sm:col-span-2")
                                                                label(for="archive" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white") Archivo JSON
                                                                input(type="file" id="updateArchiveInput" accept=".json, .geojson" rows="4" class="block p-2.5 pl-6 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-sky-500 focus:border-prim2ary-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-sky-500 dark:focus:border-primary-500" placeholder="Capa JSON")
                                                            div(class="sm:col-span-2")
                                                                label(for="icono" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white") Icono
                                                                input(type="file" id="updateIconoInput" accept=".png, .jpg" name="icono" rows="4" class="block p-2.5 pl-6 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-sky-500 focus:border-primary-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-sky-500 dark:focus:border-primary-500" placeholder="Icono en PNG o JPG")
                                                            div(class="flex items-center space-x-4")
                                                                button(type="submit" class="text-white bg-sky-500 hover:bg-sky-800 focus:ring-4 focus:outline-none focus:ring-sky-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-sky-600 dark:hover:bg-sky-500 dark:focus:ring-sky-800") Actualizar
                                        div(id="deleteModal" tabindex="-1" aria-hidden="true" class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full")
                                            div(class="relative p-4 w-full max-w-md max-h-full")
                                                div(class="relative p-4 text-center bg-white rounded-lg shadow dark:bg-gray-800 sm:p-5")
                                                    button(type="button" class="text-gray-400 absolute top-2.5 right-2.5 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center dark:hover:bg-gray-600 dark:hover:text-white" data-modal-toggle="deleteModal")
                                                        svg(aria-hidden="true" class="w-5 h-5" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg")
                                                            path(fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd")
                                                        span(class="sr-only") Close
                                                    svg(class="text-gray-400 dark:text-gray-500 w-11 h-11 mb-3.5 mx-auto" aria-hidden="true" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg")
                                                        path(fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd")
                                                    p(id="showId" class="mb-4 text-gray-500 dark:text-gray-300") ¿Estás seguro de borrar esta capa? Esta acción no se puede deshacer.
                                                    div(class="flex justify-center items-center space-x-4")
                                                        button(data-modal-toggle="deleteModal" type="button" class="py-2 px-3 text-sm font-medium text-gray-500 bg-white rounded-lg border border-gray-200 hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-sky-300 hover:text-gray-900 focus:z-10 dark:bg-gray-700 dark:text-gray-300 dark:border-gray-500 dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-sky-800")
                                                            | Cancel
                                                        button(type="submit" id="confirmDelete" class="py-2 px-3 text-sm font-medium text-center text-white bg-red-600 rounded-lg hover:bg-red-700 focus:ring-4 focus:outline-none focus:ring-red-300 dark:bg-red-500 dark:hover:bg-red-600 dark:focus:ring-red-900") Sí, borrar

            include ./includes/footer.jade

                script.
                    const layers = !{JSON.stringify(layers)};

                    $(document).ready(function(){
                        const table = new DataTable('#layersTable', {
                            responsive: true,
                            pageLength: 15,
                            lengthMenu: [ [15, 30, 60, -1], [15, 30, 60, "Todos"] ],
                            scrollX: true,
                            scrollY: true,
                            scrollCollapse: true,
                            language: {
                                url: '//cdn.datatables.net/plug-ins/1.13.7/i18n/es-ES.json',
                            },
                            columnDefs: [ { className: "dt-center", "targets": "_all" } ],
                        });

                        // Add single row selection to the table
                        $('#layersTable tbody').on('click', 'tr', function () {
                            if ($(this).hasClass('selected')) {
                                $(this).removeClass('selected');
                            } else {
                                table.$('tr.selected').removeClass('selected');
                                $(this).addClass('selected');
                            }
                        });
                    });

                    document.addEventListener('DOMContentLoaded', function () {
                        const createForm = document.getElementById('create-form');
                        const updateForm = document.getElementById('update-form');
                        const deleteModal = document.getElementById('deleteModal');

                        createForm.addEventListener('submit', async function (event) {
                            event.preventDefault();

                            const name = document.getElementById('name').value;
                            const category = document.getElementById('categoriesCreate').value;

                            const archive = document.getElementById('archive').files[0];
                            const icono = document.getElementById('icono').files[0];

                            try {
                                const formData = new FormData();
                                formData.append('name', name);
                                formData.append('category', category);
                                formData.append('archive', archive);
                                formData.append('icono', icono);

                                // Construct the URL with the actual values for name and category
                                const checkLayer = await fetch(`/api/v1/layers/${encodeURIComponent(category)}/${encodeURIComponent(name)}`, {
                                    method: 'GET',
                                    headers: {
                                        'Authorization': '!{cookies.token}',
                                    },
                                });

                                if (checkLayer.status === 404) {
                                    console.log("Error, capa existe")
                                    Swal.fire("Error", "A layer with the same name and category already exists.", "error");
                                    throw new Error("A layer with the same name and category already exists.");
                                }

                                const checkLayerData = await checkLayer.json();

                                const response = await fetch('/api/v1/layers/', {
                                    method: 'POST',
                                    headers: {
                                        'Authorization': '!{cookies.token}',
                                    },
                                    body: formData,
                                });

                                // Make a loop in formData to log in to the console the data
                                for (const [key, value] of formData.entries()) {
                                    console.log(key, value);
                                }

                                const data = await response.json();

                                if (response.ok) {
                                    Swal.fire({
                                        title: "Capa creada",
                                        text: "La capa ha sido creada correctamente.",
                                        icon: "success",
                                        showConfirmButton: true,
                                    }).then(() => {
                                        window.location.reload();
                                    });
                                } else {
                                    throw new Error(data.message);
                                }
                            } catch (error) {
                                console.error('Error:', error);
                                Swal.fire("Error", error.message, "error");
                            }
                        });

                        $(document).on("click", "#updateModalButton", function() {
                            const layerId = $(this).val();

                            // Get the layer data from the layers array
                            const layerData = layers.find(layer => layer.id == layerId);

                            // Set the layer data to the update form
                            $("#layerUpdateId").val(layerData.id);
                            $("#updateNameInput").val(layerData.name);
                            $("#categoriesUpdate").val(layerData.category);

                            // Update the information sending the information to the API
                            updateForm.addEventListener('submit', async function (event) {
                                event.preventDefault();

                                const name = document.getElementById('updateNameInput').value;
                                const category = document.getElementById('categoriesUpdate').value;

                                const archive = document.getElementById('updateArchiveInput').files[0];
                                const icono = document.getElementById('updateIconoInput').files[0];

                                console.log(name);
                                console.log(category);
                                console.log(archive);
                                console.log(icono);

                                try {
                                    const formData = new FormData();
                                    formData.append('layerId', layerId);
                                    formData.append('name', name);
                                    formData.append('category', category);
                                    formData.append('archive', archive);
                                    formData.append('icono', icono);

                                    // Construct the URL with the actual values for name and category
                                    const checkLayer = await fetch(`/api/v1/layers/${encodeURIComponent(layerId)}`, {
                                        method: 'GET',
                                        headers: {
                                            'Authorization': '!{cookies.token}',
                                        },
                                    });

                                    if(checkLayer.success === false){
                                        Swal.fire("Error", "La capa no existe, no se puede actualizar.", "error");
                                        throw new Error("La capa no existe.");
                                    }

                                    const checkLayerData = await checkLayer.json();

                                    const response = await fetch(`/api/v1/layers/${encodeURIComponent(layerId)}`, {
                                        method: 'PUT',
                                        headers: {
                                            'Authorization' : '!{cookies.token}',
                                        },
                                        body: formData,
                                    });
                                    if (response.ok) {
                                        Swal.fire({
                                            title: "Capa actualizada",
                                            text: "La capa ha sido actualizada correctamente.",
                                            icon: "success",
                                            showConfirmButton: true,
                                        }).then(() => {
                                            window.location.reload();
                                        });
                                    } else {
                                        throw new Error(data.message);
                                    }
                                }
                                catch (error) {
                                    console.error('Error:', error);
                                    Swal.fire("Error", error.message, "error");
                                }
                            })
                        });

                        // Delete layer
                        $(document).on("click", "#deleteModalButton", function() {
                            const layerId = $(this).val();
                            $("#confirmDelete").val(layerId);

                            $("#confirmDelete").on("click", async function() {
                                try {
                                    const response = await fetch(`/api/v1/layers/${layerId}`, {
                                        method: 'DELETE',
                                        headers: {
                                            'Content-Type': 'application/json',
                                            'Authorization': '!{cookies.token}',
                                        },
                                    });

                                    const data = await response.json();
                                    if (response.ok) {
                                        Swal.fire({
                                            title: "Capa eliminada",
                                            text: "La capa ha sido eliminada correctamente.",
                                            icon: "success",
                                            showConfirmButton: true,
                                        }).then(() => {
                                            window.location.reload();
                                        });
                                    } else {
                                        throw new Error(data.message);
                                    }
                                } catch (error) {
                                    console.error('Error:', error);
                                    Swal.fire("Error", error.message, "error");
                                }
                            });
                        })
                    });

